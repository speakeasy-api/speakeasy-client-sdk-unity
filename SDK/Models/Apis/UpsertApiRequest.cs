
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace SDK.Models.Apis
{
    using System;
using UnityEngine.Networking;
using System.Text;
using Newtonsoft.Json;
using SDK.Models.Shared;
using SDK.Utils;
    using System.Collections.Generic;
    public class UpsertApiRequest
    {
    /// <summary>
    /// A JSON representation of the Api to upsert
    /// </summary>
        
        [JsonProperty("ApiInput")]
        public ApiInput ApiInput { get; set; }
        
    /// <summary>
    /// The ID of the Api to upsert.
    /// </summary>
        
        [JsonProperty("apiID")]
        public string ApiID { get; set; }
        
        internal static UnityWebRequest BuildHttpRequestMessage(string operationId, UpsertApiRequest value, string baseUrl)
        {
            if("upsertApi" == operationId)
            {
                
                
                var apiID = PathParamSerializer.Serialize("simple", false, value.ApiID);
                string json = JsonConvert.SerializeObject(value.ApiInput, new JsonSerializerSettings(){ NullValueHandling = NullValueHandling.Ignore, Converters = new JsonConverter[] { new IsoDateTimeSerializer(), new EnumSerializer() }});var urlString = baseUrl + $"/v1/apis/{apiID}";
                // #request-debugging put TODO: work in progress
                var bytes = System.Text.Encoding.UTF8.GetBytes(json);
                var message = UnityWebRequest.Put(urlString, bytes);
                return message;
            }
            throw new ArgumentException($"Attempt to build UnityWebRequest for invalid operationId [{operationId}] for request type [UpsertApiRequest]");
        }
    }

}